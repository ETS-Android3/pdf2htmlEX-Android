name: Build
on: push

env:
  ANDROID_SDK_TOOLS:  "6514223"
  ANDROID_NDK:        "21.2.6472646"
  ANDROID_CMAKE:      "3.10.2.4988404"
  TARBALL_CACHE_KEY:  "tarballs-key-2"

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        abi: [ x86, x86_64, armeabi-v7a, arm64-v8a ]
        buildType: [ Debug, Release ]
        include:
          - buildType: Debug
            CMakeBuildType: Debug
            GradleBuildType: debug
          - buildType: Release
            CMakeBuildType: MinSizeRel
            GradleBuildType: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - run: .github/installAndroidTools.sh

      - run: .github/installBuildDependencies.sh

      - name: Cache tarballs
        uses: actions/cache@v1
        with:
          key: ${{ env.TARBALL_CACHE_KEY }}
          path: dependency-builder/src/main/cpp/tarballs

      - run: ./dodownloadtarballs --serial

      - name: Build pdf2htmlEX-Android
        run: ./gradlew assemble${{ matrix.buildType }} -PdisablePreDex -Pabi=${{ matrix.abi }}

      - name: Gather licenses
        if: matrix.abi == 'armeabi-v7a' && matrix.buildType == 'Release'
        run: ./gradlew dependency-builder:gatherLicenses -PdisablePreDex -Pabi=${{ matrix.abi }}

      - name: Artifact gathered licenses
        if: matrix.abi == 'armeabi-v7a' && matrix.buildType == 'Release'
        uses: actions/upload-artifact@v2
        with:
          name: licenses
          path: dependency-builder/build/licenses.xml

      - name: Cleanup installed dependencies before artifacting
        run: |
          mkdir -p i/${{ matrix.abi }}/bin
          mkdir -p i/${{ matrix.abi }}/include
          mkdir -p i/${{ matrix.abi }}/lib/pkgconfig

          mv dependency-builder/build/installed/${{ matrix.CMakeBuildType }}/${{ matrix.abi }}/bin/pkg-config i/${{ matrix.abi }}/bin/
          mv dependency-builder/build/installed/${{ matrix.CMakeBuildType }}/${{ matrix.abi }}/include/pdf2htmlEX.h i/${{ matrix.abi }}/include/
          mv dependency-builder/build/installed/${{ matrix.CMakeBuildType }}/${{ matrix.abi }}/lib/pkgconfig/pdf2htmlEX.pc i/${{ matrix.abi }}/lib/pkgconfig/
          mv dependency-builder/build/installed/${{ matrix.CMakeBuildType }}/${{ matrix.abi }}/lib/libpdf2htmlEX.so i/${{ matrix.abi }}/lib/

      - name: Artifact installed dependencies
        uses: actions/upload-artifact@v2
        with:
          name: installed-dependencies-${{ matrix.buildType }}-${{ matrix.abi }}
          path: i

      - name: Artifact results for downstream AAR
        uses: actions/upload-artifact@v2
        with:
          name: results-for-downstream-aar-${{ matrix.buildType }}-${{ matrix.abi }}
          path: dependency-builder/build/includeTheseInDownstreamAAR

  buildAllABIs:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - run: .github/installAndroidTools.sh

      - name: Cache tarballs
        uses: actions/cache@v1
        with:
          key: ${{ env.TARBALL_CACHE_KEY }}
          path: dependency-builder/src/main/cpp/tarballs

      - run: ./dodownloadtarballs --serial

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Prepare downloaded artifacts
        run: |
          find dependency-builder/build/installed

          mkdir -p dependency-builder/build
          mv artifacts/licenses/licenses.xml dependency-builder/build

          mkdir -p dependency-builder/build/installed/MinSizeRel
          mkdir -p dependency-builder/build/installed/Debug
          mv artifacts/installed-dependencies-Release-x86/x86 dependency-builder/build/installed/MinSizeRel/
          mv artifacts/installed-dependencies-Release-x86_64/x86_64 dependency-builder/build/installed/MinSizeRel/
          mv artifacts/installed-dependencies-Release-armeabi-v7a/armeabi-v7a dependency-builder/build/installed/MinSizeRel/
          mv artifacts/installed-dependencies-Release-arm64-v8a/arm64-v8a dependency-builder/build/installed/MinSizeRel/
          mv artifacts/installed-dependencies-Debug-x86/x86 dependency-builder/build/installed/Debug/
          mv artifacts/installed-dependencies-Debug-x86_64/x86_64 dependency-builder/build/installed/Debug/
          mv artifacts/installed-dependencies-Debug-armeabi-v7a/armeabi-v7a dependency-builder/build/installed/Debug/
          mv artifacts/installed-dependencies-Debug-arm64-v8a/arm64-v8a dependency-builder/build/installed/Debug/
          find dependency-builder/build/installed -type f -name 'pkg-config' -exec chmod +x {} \;

          mkdir -p dependency-builder/build/includeTheseInDownstreamAAR/release/assets/
          mkdir -p dependency-builder/build/includeTheseInDownstreamAAR/debug/assets/
          mv artifacts/results-for-downstream-aar-Release-x86/release/assets/x86 dependency-builder/build/includeTheseInDownstreamAAR/release/assets/
          mv artifacts/results-for-downstream-aar-Release-x86_64/release/assets/x86_64 dependency-builder/build/includeTheseInDownstreamAAR/release/assets/
          mv artifacts/results-for-downstream-aar-Release-armeabi-v7a/release/assets/armeabi-v7a dependency-builder/build/includeTheseInDownstreamAAR/release/assets/
          mv artifacts/results-for-downstream-aar-Release-arm64-v8a/release/assets/arm64-v8a dependency-builder/build/includeTheseInDownstreamAAR/release/assets/
          mv artifacts/results-for-downstream-aar-Debug-x86/debug/assets/x86 dependency-builder/build/includeTheseInDownstreamAAR/debug/assets/
          mv artifacts/results-for-downstream-aar-Debug-x86_64/debug/assets/x86_64 dependency-builder/build/includeTheseInDownstreamAAR/debug/assets/
          mv artifacts/results-for-downstream-aar-Debug-armeabi-v7a/debug/assets/armeabi-v7a dependency-builder/build/includeTheseInDownstreamAAR/debug/assets/
          mv artifacts/results-for-downstream-aar-Debug-arm64-v8a/debug/assets/arm64-v8a dependency-builder/build/includeTheseInDownstreamAAR/debug/assets/

          mkdir -p dependency-builder/build/includeTheseInDownstreamAAR/release/jniLibs/
          mkdir -p dependency-builder/build/includeTheseInDownstreamAAR/debug/jniLibs/
          mv artifacts/results-for-downstream-aar-Release-x86/release/jniLibs/x86 dependency-builder/build/includeTheseInDownstreamAAR/release/jniLibs/
          mv artifacts/results-for-downstream-aar-Release-x86_64/release/jniLibs/x86_64 dependency-builder/build/includeTheseInDownstreamAAR/release/jniLibs/
          mv artifacts/results-for-downstream-aar-Release-armeabi-v7a/release/jniLibs/armeabi-v7a dependency-builder/build/includeTheseInDownstreamAAR/release/jniLibs/
          mv artifacts/results-for-downstream-aar-Release-arm64-v8a/release/jniLibs/arm64-v8a dependency-builder/build/includeTheseInDownstreamAAR/release/jniLibs/
          mv artifacts/results-for-downstream-aar-Debug-x86/debug/jniLibs/x86 dependency-builder/build/includeTheseInDownstreamAAR/debug/jniLibs/
          mv artifacts/results-for-downstream-aar-Debug-x86_64/debug/jniLibs/x86_64 dependency-builder/build/includeTheseInDownstreamAAR/debug/jniLibs/
          mv artifacts/results-for-downstream-aar-Debug-armeabi-v7a/debug/jniLibs/armeabi-v7a dependency-builder/build/includeTheseInDownstreamAAR/debug/jniLibs/
          mv artifacts/results-for-downstream-aar-Debug-arm64-v8a/debug/jniLibs/arm64-v8a dependency-builder/build/includeTheseInDownstreamAAR/debug/jniLibs/

      - name: Build pdf2htmlEX-Android
        run: ./gradlew build -PdisablePreDex

      - name: Publish to maven local
        run: ./gradlew publishToMavenLocal

      - name: Prepare sample app
        run: .github/prepareSampleAppForUnpublishedLib.sh

      - name: Build sample app from unpublished library
        run: |
          cd android-sample-app
          ./gradlew build

      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(./getVersion.sh)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: "pdf2htmlEX-Android v${{ steps.get_version.outputs.version }} - ${{ github.event.commits[0].message }} - ${{ github.ref }}"
          draft: true
          prerelease: false

      - name: Upload licenses
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dependency-builder/build/licenses.xml
          asset_name: licenses.xml
          asset_content_type: text/xml

      - name: Upload Release aar
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/outputs/aar/pdf2htmlex-android-release.aar
          asset_name: pdf2htmlex-android-release.aar
          asset_content_type: application/zip

      - name: Upload Debug aar
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/outputs/aar/pdf2htmlex-android-debug.aar
          asset_name: pdf2htmlex-android-debug.aar
          asset_content_type: application/zip

      - name: Generate javadoc
        run: ./gradlew pdf2htmlEX:javadocJar

      - name: Upload javadoc.jar
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/libs/pdf2htmlex-android-${{steps.get_version.outputs.version}}-javadoc.jar
          asset_name: pdf2htmlex-android-${{steps.get_version.outputs.version}}-javadoc.jar
          asset_content_type: application/zip

      - name: Jar the sources
        run: ./gradlew pdf2htmlEX:sourceJar

      - name: Upload sources.jar
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pdf2htmlEX/build/libs/pdf2htmlex-android-${{steps.get_version.outputs.version}}-sources.jar
          asset_name: pdf2htmlex-android-${{steps.get_version.outputs.version}}-sources.jar
          asset_content_type: application/zip
