plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

group = 'com.viliussutkus89.licenseOnly'

android {
    compileSdk 32
    defaultConfig {
        minSdk 16
        targetSdk 32

        versionCode 1
        versionName '2.13.96'
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                artifactId project.name
                version = android.defaultConfig.versionName

                pom {
                    name = project.name
                    description = 'Fontconfig is a library for configuring and customizing font access.'
                    url = 'https://www.freedesktop.org/wiki/Software/fontconfig/'
                    packaging = 'aar'
                    inceptionYear = '2000'
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/2.13.96/COPYING'
                            distribution = 'repo'
                        }
                    }
                    scm {
                        url = 'https://gitlab.freedesktop.org/fontconfig/fontconfig'
                        connection = 'https://gitlab.freedesktop.org/fontconfig/fontconfig.git'
                    }
                    developers {
                        // Developer list obtained from:
                        // https://gitlab.freedesktop.org/fontconfig/fontconfig/-/blob/2.13.96/AUTHORS
                        developer {
                            name = "Keith Packard"
                            email = "keithp@keithp.com"
                        }
                        developer {
                            name = "Patrick Lam"
                            email = "plam@mit.edu"
                        }
                    }
                }
            }
        }
    }

    if (System.getenv('SIGNING_KEY')) {
        signing {
            required { true }
            useInMemoryPgpKeys(System.getenv('SIGNING_KEY'), System.getenv('SIGNING_PASS'))
            sign publishing.publications.release
        }
    }
}
